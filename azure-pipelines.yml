trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_OPTS: "-Xmx1024m"
  JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"
  SPRING_PROFILES_ACTIVE: "prod"

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        echo "Setting up Java environment"
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
      displayName: 'Install Java 11'
    
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        options: '--batch-mode'
        mavenOptions: '-Xmx1024m'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '$(JAVA_HOME)'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: true

- stage: Test
  dependsOn: Build
  jobs:
  - job: Test
    steps:
    - script: |
        echo "Setting up Java environment"
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
      displayName: 'Install Java 11'

    - script: |
        mvn test
      displayName: 'Run tests'

- stage: Deploy
  dependsOn: Test
  jobs:
  - deployment: Deploy
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "Setting up Java environment"
              sudo apt-get update
              sudo apt-get install -y openjdk-11-jdk
            displayName: 'Install Java 11'
            
          - script: |
              mvn spring-boot:run
            displayName: 'Deploy Spring Boot Application'
